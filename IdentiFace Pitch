Introduction - names

We're a team of seniors, and we just graduated on Wednesday - and we have the photos to prove it. For the underclassmen out there who have never been to a graduation, or for those out there whose last graduation was in the eighties, let me tell you one thing: you take a lot of pictures with a lot of people. After you or a friend give a phone to a parent, sibling, or friend to take a picture of you two, there will be the inevitable, "send me that picture later okay?" from one of you. In the moment, you thought it was a good idea to take 100, 200 photos with people, but when you have to "send them that picture later", you regret it. It's hard to keep track of which photos you've sent to whom, if you have to send through text, email, or Facebook, and there are drawbacks such as Facebook Messenger's image compression. We wanted to address this problem with our Android App IdentiFace, which we made using Android Studio and Microsoft Azure's Face API.

Here we arrive on the home page. We will start with the browse button. *click* The browse button pulls up the phone's pictures. Clicking on a picture loads the picture into the app and allows the app to work in the back end, detecting and identifying faces. The app uses the Face API by Microsoft which accepts an image and runs face recognition software on Microsoft's servers. The output from the API is a JSON file, which is javascript object full of information including possible age, hair color, emotion and more. We use the location data of the face from the JSON file and draw a box around all of the detected faces. Now we'll load all three sample photos and watch as faces are identified. As IdentiFace detects each face, it compares it to previously seen faces and tries to match it to a known person. *waits for pictures to detect* We've already trained the app with Daniel's face and my face, so IdentiFace already recognizes us; however, Arjun is new, so he is detected without a name. Now we can go in and add his contact information. We will add a phone number, email address, and Facebook account. By the way, the app will still work if a person does not have all three pieces of contact information. We will continue by pressing the next button, which brings us to the send page. At this point, IdentiFace is preparing the pictures for each person to be sent. There are the options for sending through email, MMS text, and Facebook Messenger. We worked on the email feature, but the emulator does not have a built in mail application, so it will not work in this demo.

In the future, we want to add batch upload capability to our app because it would make using the app faster. Also, we would like to work on the code for sending pictures through text and through Facebook Messenger. We think IdentiFace is an application that many people will find very useful and convenient, especially after graduation, prom, a wedding, or a day out with friends. 